//code from here... https://rosettacode.org/wiki/Sorting_algorithms/Merge_sort#C
#include "stdio.h"
#include "stdlib.h"
void merge (int *a, int n, int m) {
    int i, j, k;
    int *x ;
	x = new int [n];//(n * sizeof (int));
    for (i = 0, j = m, k = 0; k < n; k++) {
        x[k]= ((j==n) ? a[i++] : ((i==m) ? a[j++] : ((a[j]<a[i]) ? a[j++] : a[i++])));
    }
    for (i = 0; i < n; i++) {
        a[i] = x[i];
    }
    delete x;
}
 
void merge_sort (int *a, int n) {
    int m;
    if (n < 2)
        return;
	m = n / 2;
    merge_sort(a, m);
    merge_sort(a + m, n - m);
    merge(a, n, m);
}
 
void main () {
    int a[100];// = {4, 65, 2, -31, 0, 99, 2, 83, 782, 1};
	int *point_to_a;
    int n ;
    int i;
	point_to_a=a;
	writeString("Give size of array to sort\n");
	n = readInteger(); //sizeof a / sizeof a[0];
	writeString("Give elements of array.\n");
	for( i = 0 ; i < n; i++)
		a[i] = readInteger();

    for (i = 0; i < n; i++){
		writeInteger(a[i]);
		if(i==n-1)
			writeChar('\n');
		else
			writeChar(' ');
	}
    merge_sort(a, n);
    for (i = 0; i < n; i++, point_to_a++){
		writeInteger(*point_to_a);
		if(i==n-1)
			writeChar('\n');
		else
			writeChar(' ');	
	}
    return ;
}
